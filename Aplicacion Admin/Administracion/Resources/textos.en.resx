<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="afirmacion" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="alt" xml:space="preserve">
    <value>Altitude </value>
  </data>
  <data name="borrar" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="botonCit" xml:space="preserve">
    <value>Encounters</value>
  </data>
  <data name="botonDash" xml:space="preserve">
    <value>DashBoard</value>
  </data>
  <data name="botonEsp" xml:space="preserve">
    <value>Specialties</value>
  </data>
  <data name="botonIncio" xml:space="preserve">
    <value>Access</value>
  </data>
  <data name="botonLoc" xml:space="preserve">
    <value>Locations</value>
  </data>
  <data name="botonMed" xml:space="preserve">
    <value>Medications</value>
  </data>
  <data name="botonObj" xml:space="preserve">
    <value>Objectives</value>
  </data>
  <data name="botonPac" xml:space="preserve">
    <value>Patients</value>
  </data>
  <data name="botonPat" xml:space="preserve">
    <value>Patients</value>
  </data>
  <data name="botonPlan" xml:space="preserve">
    <value>Care Plan</value>
  </data>
  <data name="botonPos" xml:space="preserve">
    <value>Positions</value>
  </data>
  <data name="botonPrac" xml:space="preserve">
    <value>Practitioners</value>
  </data>
  <data name="botonSpec" xml:space="preserve">
    <value>Specialities</value>
  </data>
  <data name="buttonBack" xml:space="preserve">
    <value>Return to the main page</value>
  </data>
  <data name="buttonCreate" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="buttonEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="copyRight" xml:space="preserve">
    <value>Made by CroniCall</value>
  </data>
  <data name="createOK" xml:space="preserve">
    <value>Created element correctly</value>
  </data>
  <data name="deleteOK" xml:space="preserve">
    <value>Deleted element correctly</value>
  </data>
  <data name="detailsModal" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="detalles" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="editar" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editElemento" xml:space="preserve">
    <value>Edit Element</value>
  </data>
  <data name="editOK" xml:space="preserve">
    <value>Edited element correctly</value>
  </data>
  <data name="errorDataModal" xml:space="preserve">
    <value>Error while obtaining details of the element</value>
  </data>
  <data name="errorKO" xml:space="preserve">
    <value>An error has ocurred during the operation</value>
  </data>
  <data name="errorLoginAcceso" xml:space="preserve">
    <value>User or pass are not correct</value>
  </data>
  <data name="errorLoginGeneric" xml:space="preserve">
    <value>A problem has ocurred during the operation, try again latter. Error produced:  </value>
  </data>
  <data name="espList" xml:space="preserve">
    <value>List of specialties</value>
  </data>
  <data name="filtrado" xml:space="preserve">
    <value>  Filter data by any field</value>
  </data>
  <data name="formInicio" xml:space="preserve">
    <value>Introduce the user and pass of admin:</value>
  </data>
  <data name="graficoCarga" xml:space="preserve">
    <value>Load of localizations by practioners and patients</value>
  </data>
  <data name="graficoPat" xml:space="preserve">
    <value>Patients by localization</value>
  </data>
  <data name="graficoPrac" xml:space="preserve">
    <value>Practitioners by localization</value>
  </data>
  <data name="lat" xml:space="preserve">
    <value>Latitude </value>
  </data>
  <data name="locList" xml:space="preserve">
    <value>List of locations</value>
  </data>
  <data name="log" xml:space="preserve">
    <value>Longitude </value>
  </data>
  <data name="logOut" xml:space="preserve">
    <value>LogOut</value>
  </data>
  <data name="modalCerrar" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="modalConfirmation" xml:space="preserve">
    <value>You are going to delete this resource, are you sure?</value>
  </data>
  <data name="modalTitulo" xml:space="preserve">
    <value>Attention!</value>
  </data>
  <data name="modelEmpty" xml:space="preserve">
    <value>There aren't any elements to show</value>
  </data>
  <data name="placeHolderInicioPass" xml:space="preserve">
    <value>Pass ...</value>
  </data>
  <data name="placeHolderInicioUsuario" xml:space="preserve">
    <value>User ...</value>
  </data>
  <data name="subtituloInicio" xml:space="preserve">
    <value>Access to dashboard</value>
  </data>
  <data name="tittleCreate" xml:space="preserve">
    <value>Create Element</value>
  </data>
  <data name="tituloInicio" xml:space="preserve">
    <value>Access to login</value>
  </data>
  <data name="patList" xml:space="preserve">
    <value>List of patients</value>
  </data>
  <data name="posList" xml:space="preserve">
    <value>List of posicions</value>
  </data>
  <data name="pracList" xml:space="preserve">
    <value>List of practitioners</value>
  </data>
</root>